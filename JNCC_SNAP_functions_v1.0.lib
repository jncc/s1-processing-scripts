#!/bin/bash

############################################
### List of functions with SNAP version 5.0
### Version 1.0 
############################################

SNAP_S1GRD_RBN_POLS_CAL_PO()
{
  ## SNAP_S1GRD_RBN_POLS_CAL_PO $1 $2 $3 $4 $5 $6  
  ## SNAP_S1GRD_RBN_POLS_CAL_PO ("./PROD_INDIR", "S1.zip", "PROD_ROOTNAME", "./IWX_POL_OUTDIR", POL, "logfile") 
  ## SNAP_S1GRD_RBN_POLS_CAL_PO "${BASKET_INDIR}" "${SLICE_1_ZIP}" "${SLICE_1_ROOTNAME}" "${SLICE_1_VV_OUTDIR}" "VV" "${SLICE_1_LOG}"
  
  ## This function will aply the following processing 
  ## 1) Remove Broder Noise (RBN)
  ## 2) Select one polarisation between VV or VH - (POLS)
  ## 3) Apply absolute calibration generating Sigma0, Gamma0, Beta0 (CAL)
  ## 4) Apply precise orbit
  ## INPUT: Sentinel-1 IW GRD product standard slice or after assembly 
  ## OUTPUT format: .dimap 
  #############################  
  INDIRPROD="$1" ## e.g.: "${BASKET_INDIR}"
  PROD_ZIP="$2"  ## e.g.: "${SLICE_1_ZIP}"
  PROD_ROOTNAME="$3" ## e.g.: "${SLICE_1_ROOTNAME}"
  OUTPRODIR="$4" ## eg: "${SLICE_1_VV_OUTDIR}"
  POL=$5  ## e.g.: VV or VH
  logfile=$6
  # for debugging
  #echo "S1.zip Product Dir = ${INDIRPROD}"
  #echo "S1.zip = ${PROD_ZIP}"
  #echo "Product Root name = ${PROD_ROOTNAME}" ##${SlvN_ROOTNAME}
  #echo "Output directory = $OUTPRODIR"
  #echo "Orbit type = ${ORBIT_TYPE} from conf. file"
  #echo "Polarisation $POL"
  #echo "logfile = $logfile"
  echo "=========================================" >> ${logfile}
  echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
  echo "Processing ${POL}" >> ${logfile}
  echo "==> Remove Border Noise" >> ${logfile}
  echo "==> select ${POL} polarisation" >> ${logfile}
  echo "==> Apply absolute calibration generating Sigma0, Gamma0, Beta0" >> ${logfile}
  echo "==> Apply precise orbit: ${ORBIT_TYPE}" >> ${logfile} 
  echo "Input data: $INDIRPROD/${PROD_ZIP}" >> ${logfile} 
  ############ 
  $SNAP_HOME/gpt $GRAPHSDIR/S1_GRD_BNR_POL_TNR_CAL_PO.xml -e -x\
  -Pinput1="${INDIRPROD}/${PROD_ZIP}" -Pinput2="${POL}"\
  -Pinput3="1000" -Pinput4="0.5" -Pinput5="${ORBIT_TYPE}"\
  -Ptarget1="${OUTPRODIR}/${PROD_ROOTNAME}_${POL}_CAL.dim" >> ${logfile}
  ############
  echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
  echo "=========================================" >> ${logfile}
}

SNAP_S1GRD_SLICEASSEMBLY()
{
  ## SNAP_S1GRD_SLICEASSEMBLY $1 $2 $3 $4 $5 $6 $7 
  ## SNAP_S1GRD_SLICEASSEMBLY "Input directory" "number of slices to assembly" "Output directory" "${SLICE_ROOTNAME}" "POL" "$logfile"
  ## SNAP_S1GRD_SLICEASSEMBLY "${BASKET_INDIR}" "2" "${SLICE_VV_OUTDIR}" "${SLICE_ROOTNAME}" "VV" "${SLICE_LOG}"
  #################################
  ## Description
  ## This function concatenates Sentinel-1 GRD slices  
  ## Output format: beam dimap file   
  #################################
  TR_INDIR=$1
  SLICENUMBER="$2" ##e.g. ${BASKET_INDIR}/${SLICE_ZIP_1}, ${BASKET_INDIR}/${SLICE_ZIP_2}
  TR_OUTDIR="$3" ## ## e.g. ${SLICE_1_VV_OUTDIR} output directory
  ROOTNAME="$4" 
  POL="$5"  ##(VV, VH)
  logfile="$6" # "${SLICE_1_LOG}"
  ### for debugging
  # echo "Output directory = ${TR_OUTDIR}"
  # echo "Slices to be concatenated = ${SLICENUMBER}"
  # echo "output file concatenated=${TR_OUTDIR}/${ROOTNAME}_${POL}.dim"
  # echo "Polarisation = $POL"
  # echo "logfile = ${logfile}"
  if [ "${SLICENUMBER}" = "2" ]
    then
    ### Logging 
    echo "=========================================" >> ${logfile}
    echo "==> Slices Assembly" >> ${logfile}
    echo "Slices to be concatenated = ${SLICENUMBER}" >> ${logfile}
    echo "Output product = ${ROOTNAME}_${POL}" >> ${logfile}
    echo "Output folder: ${TR_OUTDIR}" >> ${logfile}
    echo "start: $(date +"%F_%H%M%S")" >> ${logfile} 
    ## SNAP processing chain 
    $SNAP_HOME/gpt $GRAPHSDIR/S1_GRD_2SlicesAssembly.xml -e -x\
    -Pinput1="${TR_INDIR}/${SLICE_1_ZIP}" -Pinput2="${TR_INDIR}/${SLICE_2_ZIP}"\
    -Ptarget1="${TR_OUTDIR}/${ROOTNAME}_${POL}.dim" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
  fi
  if [ "${SLICENUMBER}" = "3" ]
    then
    ### Logging 
    echo "=========================================" >> ${logfile}
    echo "==> Slices Assembly" >> ${logfile}
    echo "Slices to be concatenated = ${SLICENUMBER}" >> ${logfile}
    echo "Output product = ${ROOTNAME}_${POL}" >> ${logfile}
    echo "Output folder: ${TR_OUTDIR}" >> ${logfile}
    echo "start: $(date +"%F_%H%M%S")" >> ${logfile} 
    ## SNAP processing chain 
    $SNAP_HOME/gpt $GRAPHSDIR/S1_GRD_3SlicesAssembly.xml -e -x\
    -Pinput1="${TR_INDIR}/${SLICE_1_ZIP}" -Pinput2="${TR_INDIR}/${SLICE_2_ZIP}" -Pinput3="${TR_INDIR}/${SLICE_3_ZIP}"\
    -Ptarget1="${TR_OUTDIR}/${ROOTNAME}_${POL}.dim" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
  fi
}

### function for Terrain Flattening in SAR geometry
SNAP_TF_EXTDEM()
{
  ## SNAP_TF_EXTDEM $1 $2 $3 $4 $5 $6 $7 
  ## SNAP_TF_EXTDEM "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "$logfile"
  ## SNAP_TF_EXTDEM "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Beta0" "${SLICE_1_LOG}"
  #################################
  ## Description
  ## This function applies the Terrain Flattening Op in SAR geometry 
  ## Output format: beam dimap file   
  ## Values for input $2: "Beta0"
	## OUTPUT format: .dimap 	
	#################################
  TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
  TR_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR} output directory
  ROOTNAME=$3 
  POL=$4  ##(VV, VH)
  INSUFFIX=$5 #(Input suffix after the polarisation: CAL)
  BANDNAME=$6 #(Beta0)
  logfile=$7 # "${SLICE_1_LOG}"
  USEDEM=${SELDEM}  ## ==> defined in the positional parameters
  ### for debugging
	# echo "Output directory = ${TR_OUTDIR}"
	# echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" ## e.g. S1B_01Oct2017_061323_061348/VV/S1B_01Oct2017_061323_061348_VV_CAL.dim
	# echo "band for processing = ${BANDNAME}"
	# echo "Polarisation = $POL"
	# echo "logfile = ${logfile}"
	### Logging 
	echo "=========================================" >> ${logfile}
  echo "==> Terrain Flattening by using ${SELDEM} as DEM" >> ${logfile}
	echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
	echo "Output product = ${ROOTNAME}_${POL}_Gamma0_${SELDEM}_FLAT" >> ${logfile}
	echo "Output folder: ${TR_OUTDIR}" >> ${logfile}
	echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
	## SNAP processing chain 
  $SNAP_HOME/gpt $GRAPHSDIR/S1_Terrain_Flattening_APGB.xml -e -x\
  -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
  -Pinput2="${BANDNAME}_$POL" -Pinput3="${demResamplingMethod}" -Pinput4="${EXTDEMFILE}" -Pinput5="${EXTDEMNOVAL}"\
  -Ptarget1="${TR_OUTDIR}/${ROOTNAME}_${POL}_Gamma0_${SELDEM}_FLAT.dim" >> ${logfile}
	echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
	echo "=========================================" >> ${logfile}
}

### OSGB 1936 (United Kingdom) #############
### function to Terrain Correct to OSGB 1936
SNAP_ML_TC_OSGB1936()
{
  ## SNAP_ML_TC_OSGB1936 $1 $2 $3 $4 $5 $6 $7 $8 
  ## SNAP_ML_TC_OSGB1936 "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "OUTSUFFIX" "$logfile"
  ## SNAP_ML_TC_OSGB1936 "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR_GEO}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Sigma0" "${SLICE_1_LOG}"
  #################################
  ## Description
  ## This function applies
  ## 1) Multilooking (if selected from main script) 
  ## 2) Range Doppler Terrain Correction by using SRTM3sec or External DEM 
  ## 3) Output is a Geotiff file in OSGB 1936  
  ## Values: 
  ## $2: "Sigma0"; "Gamma0"; "Beta0"            
  #################################
  TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
  TR_GEO_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
  ROOTNAME=$3
  POL=$4  ##(VV, VH)
  INSUFFIX=$5 #(Input suffix after the polarisation)
  BANDNAME=$6 #(eg: Sigma0, Gamma0, Beta0)
  OUTSUFFIX=$7 #(eg: TC, FTC)
  logfile=$8 # "${SLICE_1_LOG}"
  USEDEM=${SELDEM} ## ==> defined in the positional parameters
  ## for debugging
  # echo "Output directory = ${TR_GEO_OUTDIR}"
  # echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}"
  # echo "band for processing = ${BANDNAME}"
  # echo "Polarisation = $POL"
  # echo "logfile = ${logfile}"
  ### Logging 
  echo "=========================================" >> ${logfile}
  echo "==> Range Doppler Terrain Correction by using ${USEDEM} as DEM (output as Geotiff)" >> ${logfile}
  echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
  echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${USEDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
  echo "Output folder: ${TR_GEO_OUTDIR}" >> ${logfile}
  echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
  ### APGB
  if [ "${SELDEM}" = "APGB" ] 
    then
    $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_APGB_OSGB1936.xml -e -x\
    -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
    -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="${BANDNAME}_$POL"\
    -Pinput10="${EXTDEMFILE}" -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
    -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="GeoTIFF-BigTIFF"\
    -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${USEDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
  fi 
  ### SRTM90
  if [ "${SELDEM}" = "SRTM90" ] 
    then
    $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_SRTM90_OSGB1936.xml -e -x\
    -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
    -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="${BANDNAME}_$POL"\
    -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
    -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="GeoTIFF-BigTIFF"\
    -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${USEDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
  fi          
}

### function to Terrain Correct to OSGB 1936 and Kellndorfer radiometric normalisation
SNAP_ML_TC_RNKELL_OSGB1936()
{
    ## SNAP_ML_TC_RNKELL_OSGB1936 $1 $2 $3 $4 $5 $6 $7
    ## SNAP_ML_TC_RNKELL_OSGB1936 "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "$logfile"
    ## SNAP_ML_TC_RNKELL_OSGB1936 "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR_GEO}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Sigma0" "${SLICE_1_LOG}"
    #################################
    ## Description
    ## This function applies
    ## 1) Multilooking (if selected from main script) 
    ## 2) Range Doppler Terrain Correction by using SRTM3sec or External DEM 
    ## 3) Kellndorfer Radiometric Normalisation by using the local incidence angle projected along the slant range
    ## 4) Output is a Geotiff file in OSGB1936 (zone is set into the configuration file)  
    ## INPUT: ${PROD_ROOTNAME}_${POL}_CAL.dim  (selecting beta0)
    ## Values for $6: "Sigma0"; "Gamma0"             
    #################################
    TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
    TR_GEO_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
    ROOTNAME=$3
    POL=$4  ##(VV, VH)
    INSUFFIX=$5 #(Input suffix (e.g. CAL) after the polarisation)
    BANDNAME=$6 #(eg: Sigma0, Gamma0)
    logfile=$7 # "${SLICE_1_LOG}"
    USEDEM=${SELDEM}  ## ==> defined in the positional parameters
    if [ ${BANDNAME} = "Sigma0" ]; then
     export TRIG="sin"
    elif [ ${BANDNAME} = "Gamma0" ]; then
     export TRIG="tan"
    else
     echo "Input bandname parameter must be Sigma0 or Gamma0"
     exit 
    fi
    ### for debugging
    # echo "Output directory = ${TR_GEO_OUTDIR}"
    # echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}"
    # echo "Output band = ${BANDNAME}"
    # echo "Polarisation = $POL"
    # echo "logfile = ${logfile}"
    ### Logging 
    echo "=========================================" >> ${logfile}
    echo "==> Range Doppler Terrain Correction and Kellndorfer Radiometric Normalisation by using ${SELDEM} as DEM (output as Geotiff)" >> ${logfile}
    echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
    echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
    echo "Output folder: ${TR_GEO_OUTDIR}" >> ${logfile}
    echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
    ## Check Used DEM ==> defined in the positional parameters
    ### APGB
    if [ "${SELDEM}" = "APGB" ]
      then
      $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_APGB_OSGB1936_RadNormKell.xml -e -x\
      -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
      -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="Beta0_$POL"\
      -Pinput5="${EXTDEMFILE}" -Pinput6="${demResamplingMethod}" -Pinput7="${imgResamplingMethod}"\
      -Pinput8="${pixelSpacingInMeter}" -Pinput9="${pixelSpacingInDegree}" -Pinput10="${BANDNAME}_${POL}"\
      -Pinput11="Beta0_${POL} * ${TRIG}(projectedLocalIncidenceAngle * PI/180.0)"\
      -Pinput12="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
      echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
      echo "=========================================" >> ${logfile}
    fi 
    #####
    ### SRTM90
    if [ "${SELDEM}" = "SRTM90" ]
      then  
      $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_SRTM90_OSGB1936_RadNormKell.xml -e -x\
      -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
      -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="Beta0_$POL"\
      -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
      -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="${BANDNAME}_${POL}"\
      -Pinput10="Beta0_${POL} * ${TRIG}(projectedLocalIncidenceAngle * PI/180.0)"\
      -Pinput11="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
      echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
      echo "=========================================" >> ${logfile}
    fi
}
############################################

### EPSG 29902 (Ireland)####################
### function to Terrain Correct to EPSG29902
SNAP_ML_TC_EPSG29902()
{
  ## SNAP_ML_TC_EPSG29902 $1 $2 $3 $4 $5 $6 $7 $8 
  ## SNAP_ML_TC_EPSG29902 "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "OUTSUFFIX" "$logfile"
  ## SNAP_ML_TC_EPSG29902 "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR_GEO}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Sigma0" "${SLICE_1_LOG}"
  #################################
  ## Description
  ## This function applies
  ## 1) Multilooking (if selected from main script) 
  ## 2) Range Doppler Terrain Correction by using SRTM3sec or External DEM 
  ## 3) Output is a Geotiff file in EPSG29902  
  ## Values: 
  ## $2: "Sigma0"; "Gamma0"; "Beta0"            
  #################################
  TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
  TR_GEO_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
  ROOTNAME=$3
  POL=$4  ##(VV, VH)
  INSUFFIX=$5 #(Input suffix after the polarisation)
  BANDNAME=$6 #(eg: Sigma0, Gamma0, Beta0)
  OUTSUFFIX=$7 #(eg: TC, FTC)
  logfile=$8 # "${SLICE_1_LOG}"
  USEDEM=${SELDEM} ## ==> defined in the positional parameters
  ## for debugging
  # echo "Output directory = ${TR_GEO_OUTDIR}"
  # echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}"
  # echo "band for processing = ${BANDNAME}"
  # echo "Polarisation = $POL"
  # echo "logfile = ${logfile}"
  ### Logging 
  echo "=========================================" >> ${logfile}
  echo "==> Range Doppler Terrain Correction by using ${USEDEM} as DEM (output as Geotiff)" >> ${logfile}
  echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
  echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${USEDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
  echo "Output folder: ${TR_GEO_OUTDIR}" >> ${logfile}
  echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
  ### APGB
  if [ "${SELDEM}" = "APGB" ] 
    then
    $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_APGB_EPSG29902.xml -e -x\
    -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
    -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="${BANDNAME}_$POL"\
    -Pinput10="${EXTDEMFILE}" -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
    -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="GeoTIFF-BigTIFF"\
    -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${USEDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
  fi 
  ### SRTM90
  if [ "${SELDEM}" = "SRTM90" ] 
    then
    $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_SRTM90_EPSG29902.xml -e -x\
    -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
    -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="${BANDNAME}_$POL"\
    -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
    -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="GeoTIFF-BigTIFF"\
    -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${USEDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
  fi          
}

### function to Terrain Correct to EPSG 29902 and Kellndorfer radiometric normalisation
SNAP_ML_TC_RNKELL_EPSG29902()
{
    ## SNAP_ML_TC_RNKELL_EPSG29902 $1 $2 $3 $4 $5 $6 $7
    ## SNAP_ML_TC_RNKELL_EPSG29902 "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "$logfile"
    ## SNAP_ML_TC_RNKELL_EPSG29902 "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR_GEO}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Sigma0" "${SLICE_1_LOG}"
    #################################
    ## Description
    ## This function applies
    ## 1) Multilooking (if selected from main script) 
    ## 2) Range Doppler Terrain Correction by using SRTM3sec or External DEM 
    ## 3) Kellndorfer Radiometric Normalisation by using the local incidence angle projected along the slant range
    ## 4) Output is a Geotiff file in EPSG29902 (zone is set into the configuration file)  
    ## INPUT: ${PROD_ROOTNAME}_${POL}_CAL.dim  (selecting beta0)
    ## Values for $6: "Sigma0"; "Gamma0"             
    #################################
    TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
    TR_GEO_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
    ROOTNAME=$3
    POL=$4  ##(VV, VH)
    INSUFFIX=$5 #(Input suffix (e.g. CAL) after the polarisation)
    BANDNAME=$6 #(eg: Sigma0, Gamma0)
    logfile=$7 # "${SLICE_1_LOG}"
    USEDEM=${SELDEM}  ## ==> defined in the positional parameters
    if [ ${BANDNAME} = "Sigma0" ]; then
     export TRIG="sin"
    elif [ ${BANDNAME} = "Gamma0" ]; then
     export TRIG="tan"
    else
     echo "Input bandname parameter must be Sigma0 or Gamma0"
     exit 
    fi
    ### for debugging
    # echo "Output directory = ${TR_GEO_OUTDIR}"
    # echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}"
    # echo "Output band = ${BANDNAME}"
    # echo "Polarisation = $POL"
    # echo "logfile = ${logfile}"
    ### Logging 
    echo "=========================================" >> ${logfile}
    echo "==> Range Doppler Terrain Correction and Kellndorfer Radiometric Normalisation by using ${SELDEM} as DEM (output as Geotiff)" >> ${logfile}
    echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
    echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
    echo "Output folder: ${TR_GEO_OUTDIR}" >> ${logfile}
    echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
    ## Check Used DEM ==> defined in the positional parameters
    ### APGB
    if [ "${SELDEM}" = "APGB" ]
      then
      $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_APGB_EPSG29902_RadNormKell.xml -e -x\
      -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
      -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="Beta0_$POL"\
      -Pinput5="${EXTDEMFILE}" -Pinput6="${demResamplingMethod}" -Pinput7="${imgResamplingMethod}"\
      -Pinput8="${pixelSpacingInMeter}" -Pinput9="${pixelSpacingInDegree}" -Pinput10="${BANDNAME}_${POL}"\
      -Pinput11="Beta0_${POL} * ${TRIG}(projectedLocalIncidenceAngle * PI/180.0)"\
      -Pinput12="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
      echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
      echo "=========================================" >> ${logfile}
    fi 
    #####
    ### SRTM90
    if [ "${SELDEM}" = "SRTM90" ]
      then  
      $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_SRTM90_EPSG29902_RadNormKell.xml -e -x\
      -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
      -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="Beta0_$POL"\
      -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
      -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="${BANDNAME}_${POL}"\
      -Pinput10="Beta0_${POL} * ${TRIG}(projectedLocalIncidenceAngle * PI/180.0)"\
      -Pinput11="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
      echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
      echo "=========================================" >> ${logfile}
    fi
}
############################################

### UTM WGS84 ##############################
### function to Terrain Correct to UTMWGS84
SNAP_ML_TC_UTMWGS84()
{
  ## SNAP_ML_TC_UTMWGS84 $1 $2 $3 $4 $5 $6 $7 $8
  ## SNAP_ML_TC_UTMWGS84 "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "OUTSUFFIX" "$logfile"
  ## SNAP_ML_TC_UTMWGS84 "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR_GEO}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Sigma0" "TC" ${SLICE_1_LOG}"
  #################################
  ## Description
  ## This function applies
  ## 1) Multilooking (if selected from main script) 
  ## 2) Range Doppler Terrain Correction by using SRTM3sec or External DEM 
  ## 3) Output is a Geotiff file in UTM WGS84 (zone is set into the configuration file)  
  ## Values: 
  ## $2: "Sigma0"; "Gamma0"; "Beta0"            
	#################################
  TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
  TR_GEO_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
  ROOTNAME=$3
  POL=$4  ##(VV, VH)
  INSUFFIX=$5 #(Input suffix after the polarisation)
  BANDNAME=$6 #(eg: Sigma0, Gamma0, Beta0)
  OUTSUFFIX=$7 #(eg: TC, FTC)
  #echo "$7"
  logfile="$8" # "${SLICE_1_LOG}"
  #echo "$8"
  USEDEM=${SELDEM}  ## ==> defined in the positional parameters
  ### for debugging
	# echo "Output directory = ${TR_GEO_OUTDIR}"
	# echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}"
	# echo "band for processing = ${BANDNAME}"
	# echo "Polarisation = $POL"
	# echo "logfile = ${logfile}"
	### Logging 
	echo "=========================================" >> ${logfile}
  echo "==> Range Doppler Terrain Correction by using ${SELDEM} as DEM (output as Geotiff)" >> ${logfile}
	echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
	echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
	echo "Output folder: ${TR_GEO_OUTDIR}" >> ${logfile}
	echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
	
	## Check Used DEM ==> defined in the positional parameters
  ### APGB
  if [ "${SELDEM}" = "APGB" ] 
		then
		$SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_APGB_UTMWGS84.xml -e -x\
		-Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
		-Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="${BANDNAME}_$POL"\
		-Pinput5="${EXTDEMFILE}" -Pinput6="${demResamplingMethod}" -Pinput7="${imgResamplingMethod}"\
		-Pinput8="${pixelSpacingInMeter}" -Pinput9="${pixelSpacingInDegree}" -Pinput10="${UTMPROJ}"\
		-Pinput11="${centralmeridian}" -Pinput12="${false_northing}"\
		-Pinput13="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
		echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
		echo "=========================================" >> ${logfile}
	fi 
	### SRTM90
	if [ "${SELDEM}" = "SRTM90" ] 
		then
		$SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_SRTM90_UTMWGS84.xml -e -x\
		-Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
		-Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="${BANDNAME}_$POL"\
		-Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
		-Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="${UTMPROJ}"\
		-Pinput10="${centralmeridian}" -Pinput11="${false_northing}"\
		-Pinput12="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${OUTSUFFIX}.tif" >> ${logfile}
		echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
		echo "=========================================" >> ${logfile}
	fi 		
}

### function to Terrain Correct to UTMWGS84 and Kellndorfer radiometric normalisation
SNAP_ML_TC_RNKELL_UTMWGS84()
{
    ## SNAP_ML_TC_RNKELL_UTMWGS84 $1 $2 $3 $4 $5 $6 $7
  	## SNAP_ML_TC_RNKELL_UTMWGS84 "Input directory" "Output directory" "$ROOTNAME" "POL" "INSUFFIX" "BANDNAME" "$logfile"
	  ## SNAP_ML_TC_RNKELL_UTMWGS84 "${SLICE_1_VV_OUTDIR}" "${SLICE_1_VV_OUTDIR_GEO}" "${SLICE_1_ROOTNAME}" "VV" "CAL" "Sigma0" "${SLICE_1_LOG}"
    #################################
    ## Description
    ## This function applies
    ## 1) Multilooking (if selected from main script) 
    ## 2) Range Doppler Terrain Correction by using SRTM3sec or External DEM 
	  ## 3) Kellndorfer Radiometric Normalisation by using the local incidence angle projected along the slant range
    ## 4) Output is a Geotiff file in UTM WGS84 (zone is set into the configuration file)  
    ## INPUT: ${PROD_ROOTNAME}_${POL}_CAL.dim  (selecting beta0)
	  ## Values for $6: "Sigma0"; "Gamma0"        
	  #################################
		TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
    TR_GEO_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
    ROOTNAME=$3
    POL=$4  ##(VV, VH)
    INSUFFIX=$5 #(Input suffix (e.g. CAL) after the polarisation)
    BANDNAME=$6 #(eg: Sigma0, Gamma0)
    logfile=$7 # "${SLICE_1_LOG}"
    USEDEM=${SELDEM}  ## ==> defined in the positional parameters
	
    if [ ${BANDNAME} = "Sigma0" ]; then
     export TRIG="sin"
    elif [ ${BANDNAME} = "Gamma0" ]; then
     export TRIG="tan"
    else
     echo "Input bandname parameter must be Sigma0 or Gamma0"
     exit 
    fi
    ### for debugging
	  # echo "Output directory = ${TR_GEO_OUTDIR}"
	  # echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}"
	  # echo "Output band = ${BANDNAME}"
	  # echo "Polarisation = $POL"
	  # echo "logfile = ${logfile}"
	  ### Logging 
	  echo "=========================================" >> ${logfile}
    echo "==> Range Doppler Terrain Correction and Kellndorfer Radiometric Normalisation by using ${SELDEM} as DEM (output as Geotiff)" >> ${logfile}
	  echo "Input product = ${ROOTNAME}_${POL}_${INSUFFIX}" >> ${logfile}
	  echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
	  echo "Output folder: ${TR_GEO_OUTDIR}" >> ${logfile}
	  echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
	  ## Check Used DEM ==> defined in the positional parameters
    ### APGB
	  if [ "${SELDEM}" = "APGB" ] 
      then
      $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_APGB_UTMWGS84_RadNormKell.xml -e -x\
		  -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
		  -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="Beta0_$POL"\
		  -Pinput5="${EXTDEMFILE}" -Pinput6="${demResamplingMethod}" -Pinput7="${imgResamplingMethod}"\
		  -Pinput8="${pixelSpacingInMeter}" -Pinput9="${pixelSpacingInDegree}" -Pinput10="${UTMPROJ}"\
		  -Pinput11="${centralmeridian}" -Pinput12="${false_northing}" -Pinput13="${BANDNAME}_${POL}"\
		  -Pinput14="Beta0_${POL} * ${TRIG}(projectedLocalIncidenceAngle * PI/180.0)"\
		  -Pinput15="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
		  echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
		  echo "=========================================" >> ${logfile}
	  fi 
	  #####
	  ### SRTM90
	  if [ "${SELDEM}" = "SRTM90" ]
      then	
		  $SNAP_HOME/gpt $GRAPHSDIR/S1_ML_TC_SRTM90_UTMWGS84_RadNormKell.xml -e -x\
		  -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${INSUFFIX}.dim"\
		  -Pinput2="${RANGE_LOOK}" -Pinput3="${AZIMUTH_LOOK}" -Pinput4="Beta0_$POL"\
		  -Pinput5="${demResamplingMethod}" -Pinput6="${imgResamplingMethod}"\
		  -Pinput7="${pixelSpacingInMeter}" -Pinput8="${pixelSpacingInDegree}" -Pinput9="${UTMPROJ}"\
		  -Pinput10="${centralmeridian}" -Pinput11="${false_northing}" -Pinput12="${BANDNAME}_${POL}"\
	  	-Pinput13="Beta0_${POL} * ${TRIG}(projectedLocalIncidenceAngle * PI/180.0)"\
		  -Pinput14="GeoTIFF-BigTIFF" -Ptarget1="${TR_GEO_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_RTC.tif" >> ${logfile}
		  echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
		  echo "=========================================" >> ${logfile}
	  fi
}
############################################

SNAP_SpeckleFiltering()
{
    ## SNAP_SpeckleFiltering $1 $2 $3 $4 $5 $6 $7 $8
    ## SNAP_SpeckleFiltering "Input directory" "Output directory" "$ROOTNAME" "POL" "BANDNAME" "INSUFFIX" "$logfile"
    ## SNAP_SpeckleFiltering "${SLICE_VV_OUTDIR_GEO}" "${SLICE_VV_OUTDIR_GEO}" "${SLICE_ROOTNAME}" "VV" "Sigma0" "RTC" ${SLICE_LOG}"
    #################################
    ## Description
    ## This function applies
    ## 1) Speckle Filtering (if selected from main script) 
    ## Output is a Geotiff file  
    ## E.g.: BANDNAME = Sigma0, Gamma0
    ## $2: "Sigma0"; "Gamma0"; "Beta0"            
    #################################
    TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
    TR_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
    ROOTNAME=$3
    POL=$4  ##(VV, VH)
    BANDNAME=$5 #(eg: Sigma0, Gamma0, Beta0)
    INSUFFIX=$6 #(Input suffix after the polarisation: TC, RTC, FTC)
    OUTSUFFIX="${Spk}" ## ==> Value defined from 10th positional parameters #(eg: SpkRL, SpkGM)
    echo "$OUTSUFFIX"
    logfile="$7" # "${SLICE_LOG}"
    echo "$7"
    ##N.B.: ${SELDEM} and ${CRS}   ## ==> defined in the positional parameters
    ### for debugging
    # echo "Output directory = ${TR_OUTDIR}"
    # echo "Input product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}"
    # echo "band for processing = ${BANDNAME}"
    # echo "Polarisation = $POL"
    # echo "logfile = ${logfile}"
    ### Logging 
    echo "=========================================" >> ${logfile}
    echo "==> Speckle Filtering ${Specklefilter} applied (output as Geotiff)" >> ${logfile}
    echo "Input product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}" >> ${logfile}
    echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "Output folder: ${TR_OUTDIR}" >> ${logfile}
    echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
    ## SNAP processing chain 
    $SNAP_HOME/gpt $GRAPHSDIR/S1_Speckle_Filtering.xml -e -x\
    -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}.tif"\
    -Pinput2="${BANDNAME}_$POL" -Pinput3="${Specklefilter}" -Pinput4="GeoTIFF-BigTIFF"\
    -Ptarget1="${TR_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
}

SNAP_ConvLinToDb()
{
    ## SNAP_ConvLinToDb $1 $2 $3 $4 $5 $6 $7 $8
    ## SNAP_ConvLinToDb "Input directory" "Output directory" "$ROOTNAME" "POL" "BANDNAME" "INSUFFIX" "$logfile"
    ## SNAP_ConvLinToDb "${SLICE_VV_OUTDIR_GEO}" "${SLICE_VV_OUTDIR_GEO}" "${SLICE_ROOTNAME}" "VV" "Sigma0" "RTC_${Spk}" "${SLICE_LOG}"
    #################################
    ## Description
    ## This function applies
    ## 1) conversion from liner to dB 
    ## Output is a Geotiff file  
    ## E.g.: BANDNAME = Sigma0, Gamma0
    ## $2: "Sigma0"; "Gamma0"; "Beta0"            
    #################################
    TR_INDIR=$1 ##e.g. ${SLICE_1_VV_OUTDIR} input directory
    TR_OUTDIR=$2 ## ## e.g. ${SLICE_1_VV_OUTDIR_GEO} output directory
    ROOTNAME=$3
    POL=$4  ##(VV, VH)
    BANDNAME=$5 #(eg: Sigma0, Gamma0, Beta0)
    INSUFFIX=$6 #(Input suffix after the polarisation: TC, RTC, FTC)
    OUTSUFFIX="dB" ## ==> Value defined from 10th positional parameters #(eg: SpkRL, SpkGM)
    echo "$OUTSUFFIX"
    logfile="$7" # "${SLICE_LOG}"
    echo "$7"
    ## N.B.: ${SELDEM} and ${CRS}   ## ==> defined in the positional parameters
    ### for debugging
    # echo "Output directory = ${TR_OUTDIR}"
    # echo "Input product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}"
    # echo "band for processing = ${BANDNAME}"
    # echo "Polarisation = $POL"
    # echo "logfile = ${logfile}"
    ### Logging 
    echo "=========================================" >> ${logfile}
    echo "==> Conversion from liner to dB applied (output as Geotiff)" >> ${logfile}
    echo "Input product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}" >> ${logfile}
    echo "Output product = ${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "Output folder: ${TR_OUTDIR}" >> ${logfile}
    echo "start: $(date +"%F_%H%M%S")" >> ${logfile}
    ## SNAP processing chain 
    $SNAP_HOME/gpt $GRAPHSDIR/S1_BMLinTodB.xml -e -x\
    -Pinput1="${TR_INDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}.tif"\
    -Pinput2="${BANDNAME}_${POL}_db" -Pinput3="10*log10(${BANDNAME}_$POL)" -Pinput4="Intesity" -Pinput5="NaN" -Pinput6="GeoTIFF-BigTIFF"\
    -Ptarget1="${TR_OUTDIR}/${ROOTNAME}_${POL}_${BANDNAME}_${SELDEM}_${CRS}_${INSUFFIX}_${OUTSUFFIX}.tif" >> ${logfile}
    echo "end: $(date +"%F_%H%M%S")" >> ${logfile}
    echo "=========================================" >> ${logfile}
}

